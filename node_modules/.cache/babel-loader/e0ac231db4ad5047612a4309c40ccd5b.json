{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yairraiter/movieApp_v3/react-MoviesApp/src/components/Filter/filterItem/InputRange/inputRange.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport 'react-input-range/src/scss/index.scss';\nimport InputRange from 'react-input-range';\nimport './inputRange.scss';\n\nconst InputRangeMinMax = ({\n  filter,\n  selectedRating,\n  selectedReleaseYear,\n  selectedReleaseYearRange,\n  onRatingChange,\n  onReleaseYearChange\n}) => {\n  _s();\n\n  const [rating, setRating] = useState(selectedRating);\n  const [releaseYear, setReleaseYear] = useState(selectedReleaseYear);\n  const [releaseYearRange, setReleaseYearRange] = useState(selectedReleaseYearRange);\n  useEffect(() => {\n    setRating(selectedRating);\n  }, [selectedRating]);\n  useEffect(() => {\n    setReleaseYear(selectedReleaseYear);\n  }, [selectedReleaseYear]);\n  useEffect(() => {\n    setReleaseYearRange(selectedReleaseYearRange);\n  }, [selectedReleaseYearRange]);\n\n  if (filter === \"rating\") {\n    let range = {\n      label: \"rating\",\n      min: 1.0,\n      max: 10,\n      step: 0.1\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(InputRange, {\n        minValue: range.min,\n        maxValue: range.max,\n        step: range.step,\n        value: rating,\n        onChange: setRating,\n        onChangeComplete: value => onRatingChange(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  } else if (filter === \"release_year\") {\n    let range = {\n      // min: 2000,\n      // max: 2021,\n      step: 1\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(InputRange, {\n        minValue: releaseYearRange.min,\n        maxValue: releaseYearRange.max,\n        step: range.step,\n        value: releaseYear,\n        onChange: setReleaseYear,\n        onChangeComplete: value => onReleaseYearChange(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(InputRangeMinMax, \"rB69F985n5Zq+fNu+vEQiNpA414=\");\n\n_c = InputRangeMinMax;\n\nconst mapStateToProps = state => {\n  // console.log(\"dropdown state: \", state);\n  return {\n    selectedRating: state.movies.rating,\n    selectedReleaseYear: state.movies.release_year,\n    selectedReleaseYearRange: state.movies.release_year_range\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRatingChange(rating) {\n      dispatch({\n        type: 'SET_RATING',\n        rating\n      });\n    },\n\n    onReleaseYearChange(release_year) {\n      dispatch({\n        type: 'SET_RELEASE_YEAR',\n        release_year\n      });\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputRangeMinMax);\n\nvar _c;\n\n$RefreshReg$(_c, \"InputRangeMinMax\");","map":{"version":3,"sources":["/Users/yairraiter/movieApp_v3/react-MoviesApp/src/components/Filter/filterItem/InputRange/inputRange.js"],"names":["React","useState","useEffect","connect","InputRange","InputRangeMinMax","filter","selectedRating","selectedReleaseYear","selectedReleaseYearRange","onRatingChange","onReleaseYearChange","rating","setRating","releaseYear","setReleaseYear","releaseYearRange","setReleaseYearRange","range","label","min","max","step","value","mapStateToProps","state","movies","release_year","release_year_range","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport 'react-input-range/src/scss/index.scss';\nimport InputRange from 'react-input-range';\n\nimport './inputRange.scss'\nconst InputRangeMinMax = ({\n    filter,\n    selectedRating,\n    selectedReleaseYear,\n    selectedReleaseYearRange,\n    onRatingChange,\n    onReleaseYearChange\n}) => {\n    const [rating, setRating] = useState(selectedRating);\n    const [releaseYear, setReleaseYear] = useState(selectedReleaseYear);\n    const [releaseYearRange, setReleaseYearRange] = useState(selectedReleaseYearRange);\n    useEffect(() => {\n        setRating(selectedRating);\n    }, [selectedRating])\n    useEffect(() => {\n        setReleaseYear(selectedReleaseYear);\n    }, [selectedReleaseYear])\n    useEffect(() => {\n        setReleaseYearRange(selectedReleaseYearRange);\n    }, [selectedReleaseYearRange])\n\n\n    if (filter === \"rating\") {\n\n        let range = {\n            label: \"rating\",\n            min: 1.0,\n            max: 10,\n            step: 0.1,\n        }\n\n        return (\n            <div>\n                <InputRange\n                    minValue={range.min}\n                    maxValue={range.max}\n                    step={range.step}\n                    value={rating}\n                    onChange={setRating}\n                    onChangeComplete={value => onRatingChange(value)}\n                />\n            </div>\n        )\n    } else if (filter === \"release_year\") {\n        let range = {\n            // min: 2000,\n            // max: 2021,\n            step: 1\n        }\n\n        return (\n            <div >\n                <InputRange\n                    minValue={releaseYearRange.min}\n                    maxValue={releaseYearRange.max}\n                    step={range.step}\n                    value={releaseYear}\n                    onChange={setReleaseYear}\n                    onChangeComplete={value => onReleaseYearChange(value)}\n                />\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    // console.log(\"dropdown state: \", state);\n    return {\n        selectedRating: state.movies.rating,\n        selectedReleaseYear: state.movies.release_year,\n        selectedReleaseYearRange: state.movies.release_year_range\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onRatingChange(rating) {\n            dispatch({\n                type: 'SET_RATING',\n                rating\n            });\n        },\n        onReleaseYearChange(release_year) {\n            dispatch({\n                type: 'SET_RELEASE_YEAR',\n                release_year\n            });\n        }\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(InputRangeMinMax)\n\n"]},"metadata":{},"sourceType":"module"}