{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/yairraiter/movieApp_v3/react-MoviesApp/src/components/Filter/filterItem/ItemManger/itemManger.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ItemMenu from './ItemMenu/ItemMenu';\nimport './itemManger.scss';\n\nconst ItemManger = props => {\n  _s();\n\n  const [selected, setSelected] = useState('Default');\n\n  function handleClick(value) {\n    setSelected(value);\n  }\n\n  let className = \"\";\n\n  if (props.className) {\n    className += \" \" + props.className;\n  }\n\n  let dropdown = React.Children.map(props.children, (child, index) => {\n    let clonedProps = {};\n    clonedProps.onClick = handleClick;\n    clonedProps.typeName = child.type.name;\n    return /*#__PURE__*/React.cloneElement(child, clonedProps);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    onClick: props.toggleDropdown,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ItemManger-label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ItemMenu, {\n      toggled: props.toggled,\n      children: dropdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemManger, \"fLg83q6rixsGKZBGlnaimgjq1j0=\");\n\n_c = ItemManger;\nexport default ItemManger;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemManger\");","map":{"version":3,"sources":["/Users/yairraiter/movieApp_v3/react-MoviesApp/src/components/Filter/filterItem/ItemManger/itemManger.js"],"names":["React","useState","useEffect","ItemMenu","ItemManger","props","selected","setSelected","handleClick","value","className","dropdown","Children","map","children","child","index","clonedProps","onClick","typeName","type","name","cloneElement","toggleDropdown","label","toggled"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,mBAAP;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,SAAD,CAAxC;;AAEA,WAASO,WAAT,CAAqBC,KAArB,EAA4B;AACxBF,IAAAA,WAAW,CAACE,KAAD,CAAX;AACH;;AAED,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAIL,KAAK,CAACK,SAAV,EAAqB;AACjBA,IAAAA,SAAS,IAAI,MAAML,KAAK,CAACK,SAAzB;AACH;;AAED,MAAIC,QAAQ,GAAGX,KAAK,CAACY,QAAN,CAAeC,GAAf,CACXR,KAAK,CAACS,QADK,EACK,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC9B,QAAIC,WAAW,GAAG,EAAlB;AACAA,IAAAA,WAAW,CAACC,OAAZ,GAAsBV,WAAtB;AACAS,IAAAA,WAAW,CAACE,QAAZ,GAAuBJ,KAAK,CAACK,IAAN,CAAWC,IAAlC;AACA,wBAAOrB,KAAK,CAACsB,YAAN,CAAmBP,KAAnB,EAA0BE,WAA1B,CAAP;AACH,GANU,CAAf;AASA,sBACI;AAAK,IAAA,SAAS,EAAEP,SAAhB;AACI,IAAA,OAAO,EAAEL,KAAK,CAACkB,cADnB;AAAA,4BAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,gBACKlB,KAAK,CAACmB;AADX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEnB,KAAK,CAACoB,OAAzB;AAAA,gBACKd;AADL;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAjCD;;GAAMP,U;;KAAAA,U;AAmCN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ItemMenu from './ItemMenu/ItemMenu'\nimport './itemManger.scss'\n\n\nconst ItemManger = (props) => {\n    const [selected, setSelected] = useState('Default')\n\n    function handleClick(value) {\n        setSelected(value)\n    }\n\n    let className = \"\"\n    if (props.className) {\n        className += \" \" + props.className;\n    }\n\n    let dropdown = React.Children.map(\n        props.children, (child, index) => {\n            let clonedProps = {};\n            clonedProps.onClick = handleClick;\n            clonedProps.typeName = child.type.name;\n            return React.cloneElement(child, clonedProps);\n        }\n    );\n\n    return (\n        <div className={className}\n            onClick={props.toggleDropdown}>\n            <div className=\"ItemManger-label\">\n                {props.label}\n            </div>\n            <ItemMenu toggled={props.toggled} >\n                {dropdown}\n            </ItemMenu>\n        </div>\n    )\n\n}\n\nexport default ItemManger\n"]},"metadata":{},"sourceType":"module"}