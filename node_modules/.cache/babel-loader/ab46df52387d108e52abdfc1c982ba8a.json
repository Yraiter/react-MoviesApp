{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_GENRES_REQUEST, FETCH_GENRES_SUCCESS, FETCH_GENRES_FAILURE, GET_QUALITIES } from './filtersTypes';\nexport const fetchGenres = () => {\n  return dispatch => {\n    dispatch(fetchGenresRequest());\n    axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=ab2fefad2fb133b8288873e93a86f02e&language=en-US`).then(response => {\n      // const options = response.data.genres.map(genre => {\n      //     return { id: genre.id, name: genre.name }\n      // })\n      dispatch(fetchGenresSuccess(response.data.genres)); // console.log(response.data.genres[0]);\n      // setTimeout(() => {\n      //       dispatch({\n      //           type: 'SET_GENRE',\n      //           genre: response.data.genres[0].id\n      //         });\n      // }, 500);\n    }).catch(error => {\n      // error.message is the error message\n      dispatch(fetchGenresFailure(error.message));\n    });\n  };\n};\nexport const fetchQualities = () => {\n  return dispatch => {\n    const qualityList = [{\n      id: 1,\n      name: \"1024HD\"\n    }];\n    dispatch(fetchQualitiesSuccess(qualityList)); // setTimeout(() => {\n    //     dispatch({\n    //         type: 'SET_QUALITY',\n    //         quality: qualityList[0].id\n    //       });\n    // }, 500);\n  };\n};\nexport const fetchGenresRequest = () => {\n  return {\n    type: FETCH_GENRES_REQUEST\n  };\n};\nexport const fetchGenresSuccess = genres => {\n  return {\n    type: FETCH_GENRES_SUCCESS,\n    payload: genres\n  };\n};\nexport const fetchGenresFailure = error => {\n  return {\n    type: FETCH_GENRES_FAILURE,\n    payload: error\n  };\n};\nexport const fetchQualitiesSuccess = qualities => {\n  return {\n    type: GET_QUALITIES,\n    payload: qualities\n  };\n};","map":{"version":3,"sources":["/Users/yairraiter/movieApp_v3/react-MoviesApp/src/redux/filters/filtersActions.js"],"names":["axios","FETCH_GENRES_REQUEST","FETCH_GENRES_SUCCESS","FETCH_GENRES_FAILURE","GET_QUALITIES","fetchGenres","dispatch","fetchGenresRequest","get","then","response","fetchGenresSuccess","data","genres","catch","error","fetchGenresFailure","message","fetchQualities","qualityList","id","name","fetchQualitiesSuccess","type","payload","qualities"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,aAJJ,QAKO,gBALP;AAOA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC7B,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR;AACAP,IAAAA,KAAK,CACAQ,GADL,CACU,uGADV,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd;AACA;AACA;AACAJ,MAAAA,QAAQ,CAACK,kBAAkB,CAACD,QAAQ,CAACE,IAAT,CAAcC,MAAf,CAAnB,CAAR,CAJc,CAKd;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAdL,EAeKC,KAfL,CAeWC,KAAK,IAAI;AACZ;AACAT,MAAAA,QAAQ,CAACU,kBAAkB,CAACD,KAAK,CAACE,OAAP,CAAnB,CAAR;AACH,KAlBL;AAmBH,GArBD;AAsBH,CAvBM;AAyBP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,SAAQZ,QAAD,IAAc;AACjB,UAAMa,WAAW,GAAG,CAChB;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,IAAI,EAAC;AAAZ,KADgB,CAApB;AAGAf,IAAAA,QAAQ,CAACgB,qBAAqB,CAACH,WAAD,CAAtB,CAAR,CAJiB,CAMjB;AACA;AACA;AACA;AACA;AACA;AACH,GAZD;AAaH,CAdM;AAgBP,OAAO,MAAMZ,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHgB,IAAAA,IAAI,EAAEtB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMU,kBAAkB,GAAGE,MAAM,IAAI;AACxC,SAAO;AACHU,IAAAA,IAAI,EAAErB,oBADH;AAEHsB,IAAAA,OAAO,EAAEX;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,kBAAkB,GAAGD,KAAK,IAAI;AACvC,SAAO;AACHQ,IAAAA,IAAI,EAAEpB,oBADH;AAEHqB,IAAAA,OAAO,EAAET;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMO,qBAAqB,GAAGG,SAAS,IAAI;AAC9C,SAAO;AACHF,IAAAA,IAAI,EAAEnB,aADH;AAEHoB,IAAAA,OAAO,EAAEC;AAFN,GAAP;AAIH,CALM","sourcesContent":["import axios from 'axios'\nimport {\n    FETCH_GENRES_REQUEST,\n    FETCH_GENRES_SUCCESS,\n    FETCH_GENRES_FAILURE,\n    GET_QUALITIES\n} from './filtersTypes'\n\nexport const fetchGenres = () => {\n    return (dispatch) => {\n        dispatch(fetchGenresRequest())\n        axios\n            .get(`https://api.themoviedb.org/3/genre/movie/list?api_key=ab2fefad2fb133b8288873e93a86f02e&language=en-US`)\n            .then(response => {\n                // const options = response.data.genres.map(genre => {\n                //     return { id: genre.id, name: genre.name }\n                // })\n                dispatch(fetchGenresSuccess(response.data.genres));\n                // console.log(response.data.genres[0]);\n                // setTimeout(() => {\n                //       dispatch({\n                //           type: 'SET_GENRE',\n                //           genre: response.data.genres[0].id\n                //         });\n                // }, 500);\n            })\n            .catch(error => {\n                // error.message is the error message\n                dispatch(fetchGenresFailure(error.message))\n            })\n    }\n}\n\nexport const fetchQualities = () => {\n    return (dispatch) => {\n        const qualityList = [\n            {id:1, name:\"1024HD\"}\n        ];\n        dispatch(fetchQualitiesSuccess(qualityList))\n\n        // setTimeout(() => {\n        //     dispatch({\n        //         type: 'SET_QUALITY',\n        //         quality: qualityList[0].id\n        //       });\n        // }, 500);\n    }\n}\n\nexport const fetchGenresRequest = () => {\n    return {\n        type: FETCH_GENRES_REQUEST\n    }\n}\n\nexport const fetchGenresSuccess = genres => {\n    return {\n        type: FETCH_GENRES_SUCCESS,\n        payload: genres\n    }\n}\n\nexport const fetchGenresFailure = error => {\n    return {\n        type: FETCH_GENRES_FAILURE,\n        payload: error\n    }\n}\n\nexport const fetchQualitiesSuccess = qualities => {\n    return {\n        type: GET_QUALITIES,\n        payload: qualities\n    }\n}"]},"metadata":{},"sourceType":"module"}