{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/yairraiter/movieApp_v3/react-MoviesApp/src/components/Movies/FullMovie/FullMovie.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ReadMore from 'read-more-react';\nimport './FullMovie.scss';\n\nconst FullMovie = props => {\n  const imageCoverUrl = \"https://image.tmdb.org/t/p/original\" + props.movieInfo.backdrop_path;\n  const imagePosterUrl = \"https://image.tmdb.org/t/p/w342/\" + props.movieInfo.poster_path;\n  const year = props.movieInfo.release_date.split(\"-\")[0];\n  const genres = props.movieInfo.genre_ids;\n  const overview = props.movieInfo.overview; // useEffect(() => {\n  //     console.log(\"UseEffect in full movies\")\n  // }, [])\n  // console.log(\"Props from fullmovie\", props)\n  // console.log(\"genres of movie\", genres)\n\n  let genresList = genres.map(genreID => {\n    // console.log(\"FullMovie genreID\", genreID)\n    let res = props.genresData.genres.find(genre => {\n      // eslint-disable-next-line eqeqeq\n      // console.log(\"this is genre in FullMovie\", genre)\n      if (genre.id == genreID) {\n        return genre.name;\n      } else return null;\n    }); // console.log(res)\n\n    return res.name;\n  }); // console.log(genresList)\n\n  let genreToShow = genresList.join(', '); // TODO: Need to divide to components \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fullMovieContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"close\",\n      \"data-dismiss\": \"Modal\",\n      \"aria-label\": \"Close\",\n      onClick: props.ShowHideHandler,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        \"aria-hidden\": \"true\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"locandina\",\n          src: imagePosterUrl,\n          alt: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: props.movieInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [year, \", David Ayer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"type\",\n          children: genreToShow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"minutes\",\n          children: \"117 min\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie_desc\",\n        children: /*#__PURE__*/_jsxDEV(ReadMore, {\n          text: overview,\n          min: 50,\n          ideal: 60,\n          max: 80,\n          readMoreText: \"Read more...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"blur_back\",\n      src: imageCoverUrl,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FullMovie;\n\nconst mapStateToProps = state => {\n  return {\n    genresData: state.filters\n  };\n}; // const mapDispatchToProps = dispatch => {\n//     return {\n//         fetchGenres: async () => await dispatch(await fetchGenres())\n//     }\n// }\n\n\nexport default connect(mapStateToProps // mapDispatchToProps\n)(FullMovie);\n\nvar _c;\n\n$RefreshReg$(_c, \"FullMovie\");","map":{"version":3,"sources":["/Users/yairraiter/movieApp_v3/react-MoviesApp/src/components/Movies/FullMovie/FullMovie.js"],"names":["React","useEffect","connect","ReadMore","FullMovie","props","imageCoverUrl","movieInfo","backdrop_path","imagePosterUrl","poster_path","year","release_date","split","genres","genre_ids","overview","genresList","map","genreID","res","genresData","find","genre","id","name","genreToShow","join","ShowHideHandler","title","mapStateToProps","state","filters"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport ReadMore from 'read-more-react';\n\nimport './FullMovie.scss';\n\nconst FullMovie = (props) => {\n\n    const imageCoverUrl = \"https://image.tmdb.org/t/p/original\" + props.movieInfo.backdrop_path\n    const imagePosterUrl = \"https://image.tmdb.org/t/p/w342/\" + props.movieInfo.poster_path;\n    const year = props.movieInfo.release_date.split(\"-\")[0]\n    const genres = props.movieInfo.genre_ids\n    const overview = props.movieInfo.overview\n\n    // useEffect(() => {\n    //     console.log(\"UseEffect in full movies\")\n    // }, [])\n    // console.log(\"Props from fullmovie\", props)\n\n    // console.log(\"genres of movie\", genres)\n\n    let genresList = genres.map(genreID => {\n        // console.log(\"FullMovie genreID\", genreID)\n        let res = props.genresData.genres.find(genre => {\n            // eslint-disable-next-line eqeqeq\n            // console.log(\"this is genre in FullMovie\", genre)\n            if (genre.id == genreID) {\n                return genre.name\n            }\n            else return null\n        })\n        // console.log(res)\n        return res.name\n    })\n\n    // console.log(genresList)\n    let genreToShow = genresList.join(', ')\n\n\n    // TODO: Need to divide to components \n    return (\n        <div className=\"fullMovieContainer\">\n            <button type=\"button\" className=\"close\" data-dismiss=\"Modal\" aria-label=\"Close\" onClick={props.ShowHideHandler}>\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            <div className=\"info_section\">\n                <div className=\"movie_header\">\n                    <img className=\"locandina\" src={imagePosterUrl} alt=\" \" />\n                    <h1>{props.movieInfo.title}</h1>\n                    <h4>{year}, David Ayer</h4>\n                    <p className=\"type\">{genreToShow}</p>\n                    <span className=\"minutes\">117 min</span>\n                </div>\n                <div className=\"movie_desc\">\n                    <ReadMore\n                        text={overview}\n                        min={50}\n                        ideal={60}\n                        max={80}\n                        readMoreText={\"Read more...\"}\n                    />\n                </div>\n                {/* TODO: Need to create movie Social buttons and use functionality */\n                /* <div className=\"movie_social\">\n                    <ul>\n                        <li><i className=\"material-icons\">share</i></li>\n                        <li><i className=\"material-icons\"></i></li>\n                        <li><i className=\"material-icons\">chat_bubble</i></li>\n                    </ul>\n                </div> */}\n            </div>\n            <img className=\"blur_back\" src={imageCoverUrl} alt=\"\" />\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        genresData: state.filters\n    }\n}\n\n// const mapDispatchToProps = dispatch => {\n//     return {\n//         fetchGenres: async () => await dispatch(await fetchGenres())\n//     }\n// }\n\nexport default connect(\n    mapStateToProps,\n    // mapDispatchToProps\n)(FullMovie)\n\n"]},"metadata":{},"sourceType":"module"}