{"ast":null,"code":"import { FETCH_MOVIES_REQUEST, FETCH_MOVIES_SUCCESS, FETCH_MOVIES_FAILURE, SET_GENRE, SET_QUALITY, SET_RATING, SET_RELEASE_YEAR, SET_SEARCH_TERM } from './moviesTypes';\nconst initialState = {\n  loading: true,\n  movies: [],\n  genre: '',\n  quality: '',\n  search_term: '',\n  rating: {\n    min: 1,\n    max: 10\n  },\n  release_year: {\n    min: 2007,\n    max: 2021\n  },\n  release_year_range: {\n    min: 2007,\n    max: 2021\n  }\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIES_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case FETCH_MOVIES_SUCCESS:\n      // console.log(\"payload: \", action.payload);\n      initialState.movies = action.payload.movies;\n      initialState.release_year_range = {\n        min: action.payload.lowestYear,\n        max: state.release_year_range.max\n      };\n      initialState.release_year = {\n        min: action.payload.lowestYear,\n        max: state.release_year.max\n      };\n      return {\n        loading: false,\n        movies: action.payload.movies,\n        release_year_range: initialState.release_year_range,\n        release_year: initialState.release_year,\n        genre: state.genre,\n        quality: state.quality,\n        rating: state.rating,\n        search_term: state.search_term,\n        error: ''\n      };\n\n    case FETCH_MOVIES_FAILURE:\n      return {\n        loading: false,\n        movies: [],\n        error: action.payload\n      };\n\n    case SET_GENRE:\n      // console.log({initialState});\n      return { ...state,\n        genre: action.genre\n      };\n\n    case SET_QUALITY:\n      return { ...state,\n        quality: action.quality\n      };\n\n    case SET_RATING:\n      return { ...state,\n        rating: action.rating\n      };\n\n    case SET_RELEASE_YEAR:\n      return { ...state,\n        release_year: action.release_year\n      };\n\n    case SET_SEARCH_TERM:\n      return { ...state,\n        ...initialState,\n        search_term: action.search_term\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/yairraiter/movieApp_v3/react-MoviesApp/src/redux/movies/moviesReducer.js"],"names":["FETCH_MOVIES_REQUEST","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_FAILURE","SET_GENRE","SET_QUALITY","SET_RATING","SET_RELEASE_YEAR","SET_SEARCH_TERM","initialState","loading","movies","genre","quality","search_term","rating","min","max","release_year","release_year_range","reducer","state","action","type","payload","lowestYear","error"],"mappings":"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","sourcesContent":["import {\n    FETCH_MOVIES_REQUEST,\n    FETCH_MOVIES_SUCCESS,\n    FETCH_MOVIES_FAILURE,\n    SET_GENRE,\n    SET_QUALITY,\n    SET_RATING,\n    SET_RELEASE_YEAR,\n    SET_SEARCH_TERM\n} from './moviesTypes'\n\nconst initialState = {\n    loading: true,\n    movies: [],\n    genre: '',\n    quality: '',\n    search_term: '',\n    rating: {min: 1, max: 10},\n    release_year: {min: 2007, max: 2021},\n    release_year_range: {min: 2007, max: 2021}\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FETCH_MOVIES_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case FETCH_MOVIES_SUCCESS:\n            // console.log(\"payload: \", action.payload);\n            initialState.movies = action.payload.movies;\n            initialState.release_year_range = {min: action.payload.lowestYear, max: state.release_year_range.max};\n            initialState.release_year = {min: action.payload.lowestYear, max: state.release_year.max};\n            return {\n                loading: false,\n                movies: action.payload.movies,\n                release_year_range: initialState.release_year_range,\n                release_year: initialState.release_year,\n                genre: state.genre,\n                quality: state.quality,\n                rating: state.rating,\n                search_term: state.search_term,\n                error: ''\n            }\n        case FETCH_MOVIES_FAILURE:\n            return {\n                loading: false,\n                movies: [],\n                error: action.payload\n            }\n        case SET_GENRE:\n            // console.log({initialState});\n            return {\n                ...state,\n                genre: action.genre,\n            }\n        case SET_QUALITY:\n            return {\n                ...state,\n                quality: action.quality,\n            }\n        case SET_RATING:\n            return {\n                ...state,\n                rating: action.rating,\n            }\n        case SET_RELEASE_YEAR:\n            return {\n                ...state,\n                release_year: action.release_year,\n            }\n        case SET_SEARCH_TERM:\n            return {\n                ...state,\n                ...initialState,\n                search_term: action.search_term,\n            }\n        default: return state\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}